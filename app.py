import streamlit as st
import pandas as pd
from io import BytesIO
import os

st.set_page_config(page_title="‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏µ‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô", layout="wide")

st.title("üìë ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏£‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏µ‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô")

# ==============================
# üìÇ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î)
# ==============================
DATA_FILE = "sales_daily.xlsx"
COLUMNS = [
    "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠", "‡∏•‡∏≥‡∏î‡∏±‡∏ö", "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö", "Seller",
    "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠/‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤", "‡∏£‡∏´‡∏±‡∏™", "‡∏™‡∏µ", "Size",
    "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢", "‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î", "‡∏™‡∏∏‡∏ó‡∏ò‡∏¥", "‡∏ß.‡∏î.‡∏õ.", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô",
    "‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏Å‡∏ó‡∏°.", "‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏ï‡∏à‡∏ß.", "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÇ‡∏≠‡∏ô", "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"
]

if "df" not in st.session_state:
    if os.path.exists(DATA_FILE):
        df = pd.read_excel(DATA_FILE)
    else:
        df = pd.DataFrame(columns=COLUMNS)
    st.session_state.df = df

if "edit_index" not in st.session_state:
    st.session_state.edit_index = None


# ==============================
# üßæ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
# ==============================
st.subheader("üßæ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

def clear_form():
    st.session_state.edit_index = None
    st.rerun()

df = st.session_state.df

edit_row = None
if st.session_state.edit_index is not None:
    edit_row = df.loc[st.session_state.edit_index]
    st.info(f"‚úèÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà {st.session_state.edit_index + 1}")

with st.form("sales_form", clear_on_submit=False):
    col1, col2, col3 = st.columns(3)

    with col1:
        ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ = st.date_input("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠", value=pd.to_datetime(edit_row["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠"]) if edit_row is not None else pd.Timestamp.today())
        ‡∏•‡∏≥‡∏î‡∏±‡∏ö = st.number_input("‡∏•‡∏≥‡∏î‡∏±‡∏ö", min_value=1, step=1, value=int(edit_row["‡∏•‡∏≥‡∏î‡∏±‡∏ö"]) if edit_row is not None and str(edit_row["‡∏•‡∏≥‡∏î‡∏±‡∏ö"]).isdigit() else 1)
        ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö = st.text_input("‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö", value=str(edit_row["‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö"]) if edit_row is not None else "")
        Seller = st.selectbox("Seller", ["shopee", "lazada", "cent", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"], index=0)
        ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ = st.text_input("‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠/‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤", value=str(edit_row["‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠/‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"]) if edit_row is not None else "")

    with col2:
        ‡∏£‡∏´‡∏±‡∏™ = st.text_input("‡∏£‡∏´‡∏±‡∏™", value=str(edit_row["‡∏£‡∏´‡∏±‡∏™"]) if edit_row is not None else "")
        ‡∏™‡∏µ = st.text_input("‡∏™‡∏µ", value=str(edit_row["‡∏™‡∏µ"]) if edit_row is not None else "")
        Size = st.text_input("Size", value=str(edit_row["Size"]) if edit_row is not None else "")
        ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢ = st.number_input("‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢", min_value=0.0, value=float(edit_row["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢"]) if edit_row is not None else 0.0)
        ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î = st.number_input("‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î", min_value=0.0, value=float(edit_row["‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î"]) if edit_row is not None else 0.0)
        ‡∏™‡∏∏‡∏ó‡∏ò‡∏¥ = st.number_input("‡∏™‡∏∏‡∏ó‡∏ò‡∏¥", min_value=0.0, value=float(edit_row["‡∏™‡∏∏‡∏ó‡∏ò‡∏¥"]) if edit_row is not None else 0.0)

    with col3:
        ‡∏ß‡∏î‡∏õ = st.date_input("‡∏ß.‡∏î.‡∏õ.", value=pd.to_datetime(edit_row["‡∏ß.‡∏î.‡∏õ."]) if edit_row is not None else pd.Timestamp.today())
        ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô", min_value=0.0, value=float(edit_row["‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"]) if edit_row is not None else 0.0)
        ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏Å‡∏ó‡∏° = st.number_input("‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏Å‡∏ó‡∏°.", min_value=0.0, value=float(edit_row["‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏Å‡∏ó‡∏°."]) if edit_row is not None else 0.0)
        ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏ï‡∏à‡∏ß = st.number_input("‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏ï‡∏à‡∏ß.", min_value=0.0, value=float(edit_row["‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏ï‡∏à‡∏ß."]) if edit_row is not None else 0.0)
        ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÇ‡∏≠‡∏ô = st.text_input("‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÇ‡∏≠‡∏ô", value=str(edit_row["‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÇ‡∏≠‡∏ô"]) if edit_row is not None else "")

    st.markdown("---")
    st.markdown("### üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏")

    remark_options = ["", "‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "‡∏û‡∏±‡∏™‡∏î‡∏∏‡∏ï‡∏µ‡∏Å‡∏•‡∏±‡∏ö", "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"]
    current_remark = ""
    remark_text = ""

    if edit_row is not None and isinstance(edit_row["‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"], str):
        for opt in remark_options:
            if opt and opt in edit_row["‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"]:
                current_remark = opt
                if "(" in edit_row["‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"]:
                    remark_text = edit_row["‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"].split("(")[-1].rstrip(")")
                break

    ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏´‡∏•‡∏±‡∏Å = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏", remark_options, index=remark_options.index(current_remark))
    ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° = ""
    if ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏´‡∏•‡∏±‡∏Å != "":
        ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° = st.text_area("‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°", value=remark_text)

    ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ = ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏´‡∏•‡∏±‡∏Å
    if ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:
        ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ += f" ({‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°})"

    submitted = st.form_submit_button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", use_container_width=True)
    clear = st.form_submit_button("üßπ ‡∏•‡πâ‡∏≤‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°", use_container_width=True)

if clear:
    clear_form()

if submitted:
    new_data = {
        "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠": ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠,
        "‡∏•‡∏≥‡∏î‡∏±‡∏ö": ‡∏•‡∏≥‡∏î‡∏±‡∏ö,
        "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö": ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö,
        "Seller": Seller,
        "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠/‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤": ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤,
        "‡∏£‡∏´‡∏±‡∏™": ‡∏£‡∏´‡∏±‡∏™,
        "‡∏™‡∏µ": ‡∏™‡∏µ,
        "Size": Size,
        "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢": ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≤‡∏¢,
        "‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î": ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î,
        "‡∏™‡∏∏‡∏ó‡∏ò‡∏¥": ‡∏™‡∏∏‡∏ó‡∏ò‡∏¥,
        "‡∏ß.‡∏î.‡∏õ.": ‡∏ß‡∏î‡∏õ,
        "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô": ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô,
        "‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏Å‡∏ó‡∏°.": ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏Å‡∏ó‡∏°,
        "‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á ‡∏ï‡∏à‡∏ß.": ‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏ï‡∏à‡∏ß,
        "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÇ‡∏≠‡∏ô": ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡πÇ‡∏≠‡∏ô,
        "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏": ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏,
    }

    if st.session_state.edit_index is not None:
        df.loc[st.session_state.edit_index] = new_data
        st.success("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
        st.session_state.edit_index = None
    else:
        df.loc[len(df)] = new_data
        st.success("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")

    df.sort_values(by="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠", ascending=True, inplace=True)
    df.to_excel(DATA_FILE, index=False)
    st.session_state.df = df
    st.rerun()


# ==============================
# üìã ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏•‡∏ö
# ==============================
st.subheader("üìã ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")

for i, row in df.iterrows():
    cols = st.columns([1, 1, 8])  # ‡∏õ‡∏∏‡πà‡∏° + ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    with cols[0]:
        if st.button("‚úèÔ∏è", key=f"edit_{i}"):
            st.session_state.edit_index = i
            st.rerun()
    with cols[1]:
        if st.button("üóëÔ∏è", key=f"del_{i}"):
            df = df.drop(i).reset_index(drop=True)
            df.to_excel(DATA_FILE, index=False)
            st.session_state.df = df
            st.success(f"‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà {i+1} ‡πÅ‡∏•‡πâ‡∏ß")
            st.rerun()
    with cols[2]:
        st.write(row.to_dict())

# ==============================
# ‚¨áÔ∏è ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå
# ==============================
buffer = BytesIO()
df.to_excel(buffer, index=False)
buffer.seek(0)
st.download_button(
    label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î Excel",
    data=buffer,
    file_name="sales_daily.xlsx",
    mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
)
